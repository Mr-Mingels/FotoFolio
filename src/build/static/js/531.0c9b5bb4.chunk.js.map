{"version":3,"file":"static/js/531.0c9b5bb4.chunk.js","mappings":"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","sources":["components/LikedImages.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport '../styles/LikedImages.css'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport like from '../assets/like.png'\r\nimport download from '../assets/download.png'\r\n\r\nconst LikedImages = ({ likedImagesArray, getLikedImages }) => {\r\n\r\n    const [likedImages, setLikedImages] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [searchInput, setSearchInput] = useState('')\r\n    const [column1Images, setColumn1Images] = useState([]);\r\n    const [column2Images, setColumn2Images] = useState([]);\r\n    const [column3Images, setColumn3Images] = useState([]);\r\n    const [downloadDisabled, setDownloadDisabled] = useState(false);\r\n    \r\n    const navigate = useNavigate()\r\n    \r\n    const resetSearchInput = () => {\r\n        setSearchInput('')\r\n    }\r\n\r\n    const handlePhotoPageNavigation = (imageId) => {\r\n        navigate(`/photos/${imageId}`);\r\n    }\r\n\r\n    const handleLoad = () => {\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        }, 1000);\r\n    }\r\n\r\n    const handleHoverOn = (event) => {\r\n        const likedImageBoxWrapper = event.target.closest(\".likedImageBoxWrapper\")\r\n        likedImageBoxWrapper.style.setProperty(\"--toggle-opacity\", \"1\")\r\n    }\r\n\r\n    const handleHoverOff = (event) => {\r\n        const likedImageBoxWrapper = event.target.closest(\".likedImageBoxWrapper\")\r\n        likedImageBoxWrapper.style.setProperty(\"--toggle-opacity\", \"0\")\r\n    }\r\n\r\n    const handleLikedImagesBtnHoverOn = (event) => {\r\n        const likedImagesHeaderTxtWrapper = event.target.closest(\".likedImagesHeaderTxtWrapper\")\r\n        likedImagesHeaderTxtWrapper.style.setProperty(\"--toggle-icon-color\", \"black\")\r\n    }\r\n    \r\n    const handleLikedImagesBtnHoverOff = (event) => {\r\n        const likedImagesHeaderTxtWrapper = event.target.closest(\".likedImagesHeaderTxtWrapper\")\r\n        likedImagesHeaderTxtWrapper.style.setProperty(\"--toggle-icon-color\", \"#c2c2c2\")\r\n    }\r\n\r\n    const filterImages = (images) => {\r\n        if (searchInput.trim() === '') {\r\n            return images;\r\n        }\r\n    \r\n        const searchTerm = searchInput.trim().toLowerCase();\r\n        return images.filter((image) =>\r\n            image.tags.toLowerCase().includes(searchTerm)\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedLikedImages = localStorage.getItem(\"likedImages\");\r\n        const likedImagesData = storedLikedImages ? JSON.parse(storedLikedImages) : [];\r\n\r\n        setLikedImages(likedImagesData);\r\n        \r\n        const filteredLikedImages = filterImages(likedImagesData);\r\n    \r\n        const col1 = [];\r\n        const col2 = [];\r\n        const col3 = [];\r\n    \r\n        filteredLikedImages.forEach((image, index) => {\r\n            if (index % 3 === 0) {\r\n                col1.push(image);\r\n            } else if (index % 3 === 1) {\r\n                col2.push(image);\r\n            } else {\r\n                col3.push(image);\r\n            }\r\n        });\r\n    \r\n        setColumn1Images(col1);\r\n        setColumn2Images(col2);\r\n        setColumn3Images(col3);\r\n        if (filteredLikedImages.length === 0) {\r\n            setIsLoading(false)\r\n        }\r\n    }, [likedImagesArray, searchInput]);\r\n\r\n    \r\n\r\n    const downLoadImage = async (url) => {\r\n        if (downloadDisabled) return;\r\n      \r\n        setDownloadDisabled(true);\r\n        setTimeout(() => setDownloadDisabled(false), 3000); // Disable the button for 3 seconds\r\n      \r\n        try {\r\n          const response = await fetch(url);\r\n          const blob = await response.blob();\r\n          const fileName = url.split('/').pop().split('.')[0] + '.jpg';\r\n      \r\n          const link = document.createElement(\"a\");\r\n          link.download = fileName;\r\n          link.href = URL.createObjectURL(blob);\r\n          link.click();\r\n          URL.revokeObjectURL(link.href);\r\n        } catch (error) {\r\n          console.error(\"Error downloading image:\", error);\r\n        }\r\n      };\r\n\r\n      const unLikeImage = (image) => {\r\n        const updatedLikedImages = likedImages.filter(\r\n            (likedImage) => likedImage.id !== image.id\r\n        );\r\n        setLikedImages(updatedLikedImages);\r\n        localStorage.setItem(\"likedImages\", JSON.stringify(updatedLikedImages));\r\n        getLikedImages(updatedLikedImages)\r\n    };\r\n\r\n      const getNewImageUrl = async (imageId) => {\r\n        try {\r\n          const response = await fetch(`http://localhost:3001/api/image?id=${imageId}`);\r\n          const data = await response.json();\r\n      \r\n          if (data.hits.length > 0) {\r\n            return data.hits[0].webformatURL;\r\n          } else {\r\n            return null;\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching new image URL:\", error);\r\n          return null;\r\n        }\r\n      };\r\n\r\n      const handleImageError = async (event, imageId) => {\r\n        const newImageUrl = await getNewImageUrl(imageId);\r\n      \r\n        if (newImageUrl) {\r\n          event.target.src = newImageUrl;\r\n        } else {\r\n          console.error(\"Couldn't fetch the new image URL\");\r\n        }\r\n      };\r\n      \r\n      \r\n\r\n    return (\r\n        <section className=\"likedImagesWrapper\">\r\n            {isLoading &&(\r\n                <div className=\"loader-wrapper\">\r\n                    <span className=\"loader\"><span className=\"loader-inner\"></span></span>\r\n                </div>\r\n            )}\r\n            <header className=\"likedImagesHeader\">\r\n                <div className=\"likedImagesContentWrapper\">\r\n                    <div className=\"likedImagesHeaderTxtWrapper\"\r\n                            onMouseEnter={(event) => handleLikedImagesBtnHoverOn(event)}\r\n                            onMouseLeave={(event) => handleLikedImagesBtnHoverOff(event)}>\r\n                        <svg className=\"likedHeartIconImg\" \r\n                        viewBox=\"0 0 24 24\" version=\"1.1\" aria-hidden=\"false\" style={{ fill: \"var(--toggle-icon-color)\" }}>\r\n                        <desc lang=\"en-US\">A heart</desc><path d=\"M21.424 4.594c-2.101-2.125-5.603-2.125-7.804 0l-1.601 \r\n                        1.619-1.601-1.62c-2.101-2.124-5.603-2.124-7.804 0-2.202 2.126-2.102 5.668 0 7.894L12.019 22l9.405-9.513a5.73 \r\n                        5.73 0 0 0 0-7.893Z\"></path></svg>\r\n                        <span>Likes</span>\r\n                        <span className=\"numberOfLikedImages\">{likedImages.length}</span>\r\n                    </div>\r\n                    <form className=\"likedImgSearchFormWrapper\" onSubmit={(event) => event.preventDefault()}>\r\n                        <div className=\"likedImgSearchIconWrapper\">\r\n                            <svg className=\"likedImgSearchIcon\" viewBox=\"0 0 24 24\" version=\"1.1\" aria-hidden=\"false\">\r\n                            <desc lang=\"en-US\">A magnifying glass</desc><path d=\"M16.5 15c.9-1.2 1.5-2.8 1.5-4.5C18 6.4 14.6 3 10.5 \r\n                            3S3 6.4 3 10.5 6.4 18 10.5 18c1.7 0 3.2-.5 4.5-1.5l4.6 4.5 1.4-1.5-4.5-4.5zm-6 1c-3 0-5.5-2.5-5.5-5.5S7.5 \r\n                            5 10.5 5 16 7.5 16 10.5 13.5 16 10.5 16z\"></path></svg>\r\n                        </div>\r\n                        <input placeholder=\"Search liked images\" className=\"likedImgSearchInput\" value={searchInput}\r\n                        onChange={(event) => setSearchInput(event.target.value)}></input>\r\n                        <div className='likedImgResetSearchInputBtnWrapper'>\r\n                            {searchInput && (\r\n                                <button type=\"button\" className='likedImgResetSearchInputBtn' onClick={resetSearchInput}>\r\n                                    <svg className='likedImgClearBtn' viewBox=\"0 0 24 24\" version=\"1.1\" aria-hidden=\"false\"><desc lang=\"en-US\">An X shape</desc>\r\n                                    <path d=\"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 \r\n                                    13.41 12 19 6.41Z\"></path></svg>\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </header>   \r\n            <div className=\"renderedLikedImagesWrapper\">\r\n                <div className=\"renderedLikedImagesContent\">\r\n                    <div className=\"likedImagesResultsColumnContent\">\r\n                            {column1Images.map((image, index) => (\r\n                                <div className=\"likedImageBoxWrapper\" key={index} onMouseEnter={(event) => handleHoverOn(event)}\r\n                                onMouseLeave={(event) => handleHoverOff(event)}>\r\n                                    <img className=\"likedImage\" loading='lazy' src={image.webformatURL}  \r\n                                    onClick={() => handlePhotoPageNavigation(image.id)} \r\n                                    onError={(event) => handleImageError(event, image.id)}/>\r\n                                    <div className='likedImageBoxBtnWrapper' style={{ opacity: \"var(--toggle-opacity)\"}}>\r\n                                        <button className='likedDownLoadBtn'disabled={downloadDisabled} \r\n                                        onClick={() => downLoadImage(image.webformatURL)}\r\n                                        ><img className='likedDownLoadImg' src={download} /></button>\r\n                                            <button className='likedLikeImgBtn liked' onClick={() => unLikeImage(image)}>\r\n                                                <img className='likedLikeImg liked' src={like} />\r\n                                            </button>\r\n                                    </div>\r\n                                    <div className='likedImgBoxTagsWrapper' style={{ opacity: \"var(--toggle-opacity)\"}}>\r\n                                        <span className='likedImgTagsTxt'>{image.tags}</span>\r\n                                    </div>\r\n                                </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"likedImagesResultsColumnContent\">\r\n                            {column2Images.map((image, index) => (\r\n                                <div className=\"likedImageBoxWrapper\" key={index} onMouseEnter={(event) => handleHoverOn(event)}\r\n                                onMouseLeave={(event) => handleHoverOff(event)}>\r\n                                    <img className=\"likedImage\" loading='lazy' src={image.webformatURL}  \r\n                                    onClick={() => handlePhotoPageNavigation(image.id)} \r\n                                    onError={(event) => handleImageError(event, image.id)}/>\r\n                                    <div className='likedImageBoxBtnWrapper' style={{ opacity: \"var(--toggle-opacity)\"}}>\r\n                                        <button className='likedDownLoadBtn' disabled={downloadDisabled} \r\n                                        onClick={() => downLoadImage(image.webformatURL)}\r\n                                        ><img className='likedDownLoadImg' src={download} /></button>\r\n                                            <button className='likedLikeImgBtn liked' onClick={() => unLikeImage(image)}>\r\n                                                <img className='likedLikeImg liked' src={like} />\r\n                                            </button>\r\n                                    </div>\r\n                                    <div className='likedImgBoxTagsWrapper' style={{ opacity: \"var(--toggle-opacity)\"}}>\r\n                                        <span className='likedImgTagsTxt'>{image.tags}</span>\r\n                                    </div>\r\n                                </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"likedImagesResultsColumnContent\">\r\n                            {column3Images.map((image, index) => (\r\n                                <div className=\"likedImageBoxWrapper\" key={index} onMouseEnter={(event) => handleHoverOn(event)}\r\n                                onMouseLeave={(event) => handleHoverOff(event)}>\r\n                                    <img className=\"likedImage\" loading='lazy' src={image.webformatURL} onLoad={handleLoad}  \r\n                                    onClick={() => handlePhotoPageNavigation(image.id)}  \r\n                                    onError={(event) => handleImageError(event, image.id)}/>\r\n                                    <div className='likedImageBoxBtnWrapper' style={{ opacity: \"var(--toggle-opacity)\"}}>\r\n                                        <button className='likedDownLoadBtn' disabled={downloadDisabled} \r\n                                        onClick={() => downLoadImage(image.webformatURL)}>\r\n                                            <img className='likedDownLoadImg' src={download} /></button>\r\n                                            <button className='likedLikeImgBtn liked' onClick={() => unLikeImage(image)}>\r\n                                                <img className='likedLikeImg liked' src={like} />\r\n                                            </button>\r\n                                    </div>\r\n                                    <div className='likedImgBoxTagsWrapper' style={{ opacity: \"var(--toggle-opacity)\"}}>\r\n                                        <span className='likedImgTagsTxt'>{image.tags}</span>\r\n                                    </div>\r\n                                </div>\r\n                                ))}\r\n                            </div>                                    \r\n                        </div>\r\n                    </div>\r\n            </section>\r\n    )\r\n}\r\n\r\nexport default LikedImages"],"names":["_ref","likedImagesArray","getLikedImages","_useState","useState","_useState2","_slicedToArray","likedImages","setLikedImages","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","searchInput","setSearchInput","_useState7","_useState8","column1Images","setColumn1Images","_useState9","_useState10","column2Images","setColumn2Images","_useState11","_useState12","column3Images","setColumn3Images","_useState13","_useState14","downloadDisabled","setDownloadDisabled","navigate","useNavigate","handlePhotoPageNavigation","imageId","concat","handleLoad","setTimeout","handleHoverOn","event","target","closest","style","setProperty","handleHoverOff","useEffect","storedLikedImages","localStorage","getItem","likedImagesData","JSON","parse","filteredLikedImages","images","trim","searchTerm","toLowerCase","filter","image","tags","includes","filterImages","col1","col2","col3","forEach","index","push","length","downLoadImage","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","blob","fileName","link","wrap","_context","prev","next","abrupt","fetch","sent","split","pop","document","createElement","download","href","URL","createObjectURL","click","revokeObjectURL","t0","console","error","stop","_x","apply","arguments","unLikeImage","updatedLikedImages","likedImage","id","setItem","stringify","getNewImageUrl","_ref3","_callee2","data","_context2","json","hits","webformatURL","_x2","handleImageError","_ref4","_callee3","newImageUrl","_context3","src","_x3","_x4","_jsxs","className","children","_jsx","onMouseEnter","handleLikedImagesBtnHoverOn","onMouseLeave","handleLikedImagesBtnHoverOff","viewBox","version","fill","lang","d","onSubmit","preventDefault","placeholder","value","onChange","type","onClick","map","loading","onError","opacity","disabled","like","onLoad"],"sourceRoot":""}